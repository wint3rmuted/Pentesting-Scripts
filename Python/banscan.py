import socket
# import pyfiglet  # Make sure to install it using: pip install pyfiglet. <- Ended up embedding ascii directly instead of pyfiglet.

def generate_ascii_banner():
   return """
 |                                       
 __ \   _` | __ \   __|  __|  _` | __ \  
 |   | (   | |   |\__ \ (    (   | |   | 
_.__/ \__,_|_|  _|____/\___|\__,_|_|  _| 
<-----------------------------------------
Port Scanner & Bannergrabber by wint3rmute
----------------------------------------->
  """

def scan_ports(target_ip, start_port, end_port):
    open_ports = []

    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)

        result = sock.connect_ex((target_ip, port))

        if result == 0:
            open_ports.append(port)

        sock.close()

    return open_ports

def banner_grab(target_ip, port):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)
            s.connect((target_ip, port))

            # Send a simple request to get the banner
            s.send(b"GET / HTTP/1.1\r\n\r\n")

            # Receive and return the banner
            banner = s.recv(1024)
            return banner.decode("utf-8").strip()

    except socket.error as e:
        return f"Error: {e}"

def main():
    print(generate_ascii_banner())

    # Get user input for target IP address and port range
    target_ip = input("Enter the target IP address: ")
    start_port = int(input("Enter the start port: "))
    end_port = int(input("Enter the end port: "))

    # Call the scan_ports function and store the result
    open_ports = scan_ports(target_ip, start_port, end_port)

    # Display the open ports
    if open_ports:
        print("\nOpen ports on {}: {}".format(target_ip, open_ports))
        
        # Perform banner grab on open ports
        for port in open_ports:
            banner = banner_grab(target_ip, port)
            print(f"\nBanner for Port {port}:\n{banner}")

    else:
        print("\nNo open ports found on {} in the specified range.".format(target_ip))

if __name__ == "__main__":
    main()
